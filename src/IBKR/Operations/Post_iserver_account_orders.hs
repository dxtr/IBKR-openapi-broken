-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation post_iserver_account_orders
module IBKR.Operations.Post_iserver_account_orders where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified IBKR.Common
import IBKR.Types

-- | > POST /iserver/account/orders
-- 
-- The endpoint is meant to be used in polling mode, e.g. requesting every x seconds.
-- The response will contain two objects, one is notification, the other is orders.
-- Orders is the list of live orders (cancelled, filled, submitted).
-- Notifications contains information about execute orders as they happen, see status field.
-- To receive streaming live orders the endpoint \/ws can be used. Refer to [Streaming WebSocket Data](https:\/\/interactivebrokers.github.io\/cpwebapi\/RealtimeSubscription.html) for details.
post_iserver_account_orders :: forall m . IBKR.Common.MonadHTTP m => IBKR.Common.ClientT m (Network.HTTP.Client.Types.Response Post_iserver_account_ordersResponse) -- ^ Monadic computation which returns the result of the operation
post_iserver_account_orders = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either Post_iserver_account_ordersResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Post_iserver_account_ordersResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                               Post_iserver_account_ordersResponseBody200)
                                                                                                                                                                                    | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (IBKR.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/iserver/account/orders") GHC.Base.mempty)
-- | Represents a response of the operation 'post_iserver_account_orders'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Post_iserver_account_ordersResponseError' is used.
data Post_iserver_account_ordersResponse =
   Post_iserver_account_ordersResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | Post_iserver_account_ordersResponse200 Post_iserver_account_ordersResponseBody200 -- ^ An object contains two arrays
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/iserver\/account\/orders.POST.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data Post_iserver_account_ordersResponseBody200 = Post_iserver_account_ordersResponseBody200 {
  -- | orders
  post_iserver_account_ordersResponseBody200Orders :: (GHC.Maybe.Maybe ([Post_iserver_account_ordersResponseBody200Orders]))
  -- | snapshot: If live order update is a snapshot
  , post_iserver_account_ordersResponseBody200Snapshot :: (GHC.Maybe.Maybe GHC.Types.Bool)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Post_iserver_account_ordersResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orders" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200Orders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("snapshot" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200Snapshot obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orders" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200Orders obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("snapshot" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200Snapshot obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Post_iserver_account_ordersResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Post_iserver_account_ordersResponseBody200" (\obj -> (GHC.Base.pure Post_iserver_account_ordersResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "orders")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "snapshot"))
-- | Create a new 'Post_iserver_account_ordersResponseBody200' with all required fields.
mkPost_iserver_account_ordersResponseBody200 :: Post_iserver_account_ordersResponseBody200
mkPost_iserver_account_ordersResponseBody200 = Post_iserver_account_ordersResponseBody200{post_iserver_account_ordersResponseBody200Orders = GHC.Maybe.Nothing,
                                                                                          post_iserver_account_ordersResponseBody200Snapshot = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/iserver\/account\/orders.POST.responses.200.content.application\/json.schema.properties.orders.items@ in the specification.
-- 
-- 
data Post_iserver_account_ordersResponseBody200Orders = Post_iserver_account_ordersResponseBody200Orders {
  -- | acct: Account number
  post_iserver_account_ordersResponseBody200OrdersAcct :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | bgColor: Background color in hex format
  , post_iserver_account_ordersResponseBody200OrdersBgColor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | cashCcy: Cash currency
  , post_iserver_account_ordersResponseBody200OrdersCashCcy :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | companyName: Company Name
  , post_iserver_account_ordersResponseBody200OrdersCompanyName :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | conid: Contract identifier
  , post_iserver_account_ordersResponseBody200OrdersConid :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | conidex: conid and exchange. Format supports conid or conid\@exchange
  , post_iserver_account_ordersResponseBody200OrdersConidex :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | description1: Formatted ticker description
  , post_iserver_account_ordersResponseBody200OrdersDescription1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | fgColor: Foreground color in hex format
  , post_iserver_account_ordersResponseBody200OrdersFgColor :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | filledQuantity: Quantity filled
  , post_iserver_account_ordersResponseBody200OrdersFilledQuantity :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | lastExecutionTime: Last status update in format YYMMDDhhmms based in GMT
  , post_iserver_account_ordersResponseBody200OrdersLastExecutionTime :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | lastExecutionTime_r: Last status update unix time in ms
  , post_iserver_account_ordersResponseBody200OrdersLastExecutionTime_r :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | listingExchange: Listing Exchange
  , post_iserver_account_ordersResponseBody200OrdersListingExchange :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | orderDesc: Order description
  , post_iserver_account_ordersResponseBody200OrdersOrderDesc :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | orderId: Order identifier
  , post_iserver_account_ordersResponseBody200OrdersOrderId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | orderType: Order type
  , post_iserver_account_ordersResponseBody200OrdersOrderType :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | order_ref: Order reference
  , post_iserver_account_ordersResponseBody200OrdersOrder_ref :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | origOrderType: Original order type
  , post_iserver_account_ordersResponseBody200OrdersOrigOrderType :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | price: Price of order
  , post_iserver_account_ordersResponseBody200OrdersPrice :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | remainingQuantity: Quantity remaining
  , post_iserver_account_ordersResponseBody200OrdersRemainingQuantity :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | secType: Asset class
  , post_iserver_account_ordersResponseBody200OrdersSecType :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | side: The side of the market of the order.
  --  * BUY: Buy contract near posted ask price
  --  * SELL: Sell contract near posted bid price
  --  * ASSN: Option Assignment, if BUYSELL=BUY and OptionType=PUT or BUYSELL=SELL and OptionType=CALL
  --  * EXER: Option Exercise, if BUYSELL=SELL and OptionType=PUT or BUYSELL=BUY and OptionType=CALL
  , post_iserver_account_ordersResponseBody200OrdersSide :: (GHC.Maybe.Maybe Post_iserver_account_ordersResponseBody200OrdersSide)
  -- | sizeAndFills: Quantity outstanding and total quantity concatenated with forward slash separator
  , post_iserver_account_ordersResponseBody200OrdersSizeAndFills :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | status: Status of the order
  , post_iserver_account_ordersResponseBody200OrdersStatus :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | supportsTaxOpt: Supports Tax Optimization with 0 for no and 1 for yes
  , post_iserver_account_ordersResponseBody200OrdersSupportsTaxOpt :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | ticker: Underlying symbol
  , post_iserver_account_ordersResponseBody200OrdersTicker :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | timeInForce: Time in force
  , post_iserver_account_ordersResponseBody200OrdersTimeInForce :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Post_iserver_account_ordersResponseBody200Orders
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acct" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersAcct obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bgColor" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersBgColor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashCcy" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersCashCcy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("companyName" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersCompanyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("conid" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersConid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("conidex" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersConidex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description1" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersDescription1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fgColor" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersFgColor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("filledQuantity" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersFilledQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lastExecutionTime" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersLastExecutionTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lastExecutionTime_r" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersLastExecutionTime_r obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("listingExchange" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersListingExchange obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderDesc" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersOrderDesc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderId" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderType" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersOrderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("order_ref" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersOrder_ref obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origOrderType" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersOrigOrderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersPrice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("remainingQuantity" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersRemainingQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("secType" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersSecType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("side" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersSide obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sizeAndFills" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersSizeAndFills obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("supportsTaxOpt" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersSupportsTaxOpt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ticker" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersTicker obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeInForce" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersTimeInForce obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("acct" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersAcct obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("bgColor" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersBgColor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("cashCcy" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersCashCcy obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("companyName" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersCompanyName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("conid" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersConid obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("conidex" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersConidex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("description1" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersDescription1 obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("fgColor" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersFgColor obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("filledQuantity" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersFilledQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lastExecutionTime" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersLastExecutionTime obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("lastExecutionTime_r" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersLastExecutionTime_r obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("listingExchange" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersListingExchange obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderDesc" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersOrderDesc obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderId" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersOrderId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("orderType" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersOrderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("order_ref" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersOrder_ref obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("origOrderType" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersOrigOrderType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("price" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersPrice obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("remainingQuantity" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersRemainingQuantity obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("secType" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersSecType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("side" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersSide obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("sizeAndFills" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersSizeAndFills obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("status" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("supportsTaxOpt" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersSupportsTaxOpt obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("ticker" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersTicker obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("timeInForce" Data.Aeson.Types.ToJSON..=)) (post_iserver_account_ordersResponseBody200OrdersTimeInForce obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Post_iserver_account_ordersResponseBody200Orders
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Post_iserver_account_ordersResponseBody200Orders" (\obj -> (((((((((((((((((((((((((GHC.Base.pure Post_iserver_account_ordersResponseBody200Orders GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "acct")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "bgColor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "cashCcy")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "companyName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "conid")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "conidex")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "description1")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "fgColor")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "filledQuantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lastExecutionTime")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "lastExecutionTime_r")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "listingExchange")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "orderDesc")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "orderId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "orderType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "order_ref")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "origOrderType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "price")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "remainingQuantity")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "secType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "side")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "sizeAndFills")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "supportsTaxOpt")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "ticker")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "timeInForce"))
-- | Create a new 'Post_iserver_account_ordersResponseBody200Orders' with all required fields.
mkPost_iserver_account_ordersResponseBody200Orders :: Post_iserver_account_ordersResponseBody200Orders
mkPost_iserver_account_ordersResponseBody200Orders = Post_iserver_account_ordersResponseBody200Orders{post_iserver_account_ordersResponseBody200OrdersAcct = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersBgColor = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersCashCcy = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersCompanyName = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersConid = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersConidex = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersDescription1 = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersFgColor = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersFilledQuantity = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersLastExecutionTime = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersLastExecutionTime_r = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersListingExchange = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersOrderDesc = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersOrderId = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersOrderType = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersOrder_ref = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersOrigOrderType = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersPrice = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersRemainingQuantity = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersSecType = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersSide = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersSizeAndFills = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersStatus = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersSupportsTaxOpt = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersTicker = GHC.Maybe.Nothing,
                                                                                                      post_iserver_account_ordersResponseBody200OrdersTimeInForce = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/iserver\/account\/orders.POST.responses.200.content.application\/json.schema.properties.orders.items.properties.side@ in the specification.
-- 
-- The side of the market of the order.
--  * BUY: Buy contract near posted ask price
--  * SELL: Sell contract near posted bid price
--  * ASSN: Option Assignment, if BUYSELL=BUY and OptionType=PUT or BUYSELL=SELL and OptionType=CALL
--  * EXER: Option Exercise, if BUYSELL=SELL and OptionType=PUT or BUYSELL=BUY and OptionType=CALL
data Post_iserver_account_ordersResponseBody200OrdersSide =
   Post_iserver_account_ordersResponseBody200OrdersSideOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | Post_iserver_account_ordersResponseBody200OrdersSideTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | Post_iserver_account_ordersResponseBody200OrdersSideEnumBUY -- ^ Represents the JSON value @"BUY"@
  | Post_iserver_account_ordersResponseBody200OrdersSideEnumSELL -- ^ Represents the JSON value @"SELL"@
  | Post_iserver_account_ordersResponseBody200OrdersSideEnumASSN -- ^ Represents the JSON value @"ASSN"@
  | Post_iserver_account_ordersResponseBody200OrdersSideEnumEXER -- ^ Represents the JSON value @"EXER"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Post_iserver_account_ordersResponseBody200OrdersSide
    where toJSON (Post_iserver_account_ordersResponseBody200OrdersSideOther val) = val
          toJSON (Post_iserver_account_ordersResponseBody200OrdersSideTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (Post_iserver_account_ordersResponseBody200OrdersSideEnumBUY) = "BUY"
          toJSON (Post_iserver_account_ordersResponseBody200OrdersSideEnumSELL) = "SELL"
          toJSON (Post_iserver_account_ordersResponseBody200OrdersSideEnumASSN) = "ASSN"
          toJSON (Post_iserver_account_ordersResponseBody200OrdersSideEnumEXER) = "EXER"
instance Data.Aeson.Types.FromJSON.FromJSON Post_iserver_account_ordersResponseBody200OrdersSide
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "BUY" -> Post_iserver_account_ordersResponseBody200OrdersSideEnumBUY
                                            | val GHC.Classes.== "SELL" -> Post_iserver_account_ordersResponseBody200OrdersSideEnumSELL
                                            | val GHC.Classes.== "ASSN" -> Post_iserver_account_ordersResponseBody200OrdersSideEnumASSN
                                            | val GHC.Classes.== "EXER" -> Post_iserver_account_ordersResponseBody200OrdersSideEnumEXER
                                            | GHC.Base.otherwise -> Post_iserver_account_ordersResponseBody200OrdersSideOther val)
-- | > POST /iserver/account/orders
-- 
-- The same as 'post_iserver_account_orders' but accepts an explicit configuration.
post_iserver_account_ordersWithConfiguration :: forall m . IBKR.Common.MonadHTTP m => IBKR.Common.Configuration -- ^ The configuration to use in the request
  -> m (Network.HTTP.Client.Types.Response Post_iserver_account_ordersResponse) -- ^ Monadic computation which returns the result of the operation
post_iserver_account_ordersWithConfiguration config = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either Post_iserver_account_ordersResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Post_iserver_account_ordersResponse200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Post_iserver_account_ordersResponseBody200)
                                                                                                                                                                                                            | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (IBKR.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/iserver/account/orders") GHC.Base.mempty)
-- | > POST /iserver/account/orders
-- 
-- The same as 'post_iserver_account_orders' but returns the raw 'Data.ByteString.Char8.ByteString'.
post_iserver_account_ordersRaw :: forall m . IBKR.Common.MonadHTTP m => IBKR.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
post_iserver_account_ordersRaw = GHC.Base.id (IBKR.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/iserver/account/orders") GHC.Base.mempty)
-- | > POST /iserver/account/orders
-- 
-- The same as 'post_iserver_account_orders' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
post_iserver_account_ordersWithConfigurationRaw :: forall m . IBKR.Common.MonadHTTP m => IBKR.Common.Configuration -- ^ The configuration to use in the request
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
post_iserver_account_ordersWithConfigurationRaw config = GHC.Base.id (IBKR.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "POST") (Data.Text.pack "/iserver/account/orders") GHC.Base.mempty)

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation get_portfolio_subaccounts2__page_
module IBKR.Operations.Get_portfolio_subaccounts2__page_ where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified IBKR.Common
import IBKR.Types

-- | > GET /portfolio/subaccounts2/{page}
-- 
-- Used in tiered account structures (such as Financial Advisor and IBroker Accounts) to return a list of sub-accounts, paginated up to 20 accounts per page, for which the user can view position and account-related information. This endpoint must be called prior to calling other \/portfolio endpoints for those sub-accounts. If you have less than 100 sub-accounts use \/portfolio\/subaccounts. To query a list of accounts the user can trade, see \/iserver\/accounts.
get_portfolio_subaccounts2__page_ :: forall m . IBKR.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ page
  -> IBKR.Common.ClientT m (Network.HTTP.Client.Types.Response Get_portfolio_subaccounts2__page_Response) -- ^ Monadic computation which returns the result of the operation
get_portfolio_subaccounts2__page_ page = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either Get_portfolio_subaccounts2__page_ResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Get_portfolio_subaccounts2__page_Response200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                      Get_portfolio_subaccounts2__page_ResponseBody200)
                                                                                                                                                                                                     | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (IBKR.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/portfolio/subaccounts2/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel page)) GHC.Base.++ ""))) GHC.Base.mempty)
-- | Represents a response of the operation 'get_portfolio_subaccounts2__page_'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Get_portfolio_subaccounts2__page_ResponseError' is used.
data Get_portfolio_subaccounts2__page_Response =
   Get_portfolio_subaccounts2__page_ResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | Get_portfolio_subaccounts2__page_Response200 Get_portfolio_subaccounts2__page_ResponseBody200 -- ^ An object containing an array
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | Defines the object schema located at @paths.\/portfolio\/subaccounts2\/{page}.GET.responses.200.content.application\/json.schema@ in the specification.
-- 
-- 
data Get_portfolio_subaccounts2__page_ResponseBody200 = Get_portfolio_subaccounts2__page_ResponseBody200 {
  -- | metadata
  get_portfolio_subaccounts2__page_ResponseBody200Metadata :: (GHC.Maybe.Maybe Get_portfolio_subaccounts2__page_ResponseBody200Metadata)
  -- | subaccounts
  , get_portfolio_subaccounts2__page_ResponseBody200Subaccounts :: (GHC.Maybe.Maybe ([Get_portfolio_subaccounts2__page_ResponseBody200Subaccounts]))
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Get_portfolio_subaccounts2__page_ResponseBody200
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subaccounts" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200Subaccounts obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("metadata" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200Metadata obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("subaccounts" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200Subaccounts obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Get_portfolio_subaccounts2__page_ResponseBody200
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Get_portfolio_subaccounts2__page_ResponseBody200" (\obj -> (GHC.Base.pure Get_portfolio_subaccounts2__page_ResponseBody200 GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "metadata")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "subaccounts"))
-- | Create a new 'Get_portfolio_subaccounts2__page_ResponseBody200' with all required fields.
mkGet_portfolio_subaccounts2__page_ResponseBody200 :: Get_portfolio_subaccounts2__page_ResponseBody200
mkGet_portfolio_subaccounts2__page_ResponseBody200 = Get_portfolio_subaccounts2__page_ResponseBody200{get_portfolio_subaccounts2__page_ResponseBody200Metadata = GHC.Maybe.Nothing,
                                                                                                      get_portfolio_subaccounts2__page_ResponseBody200Subaccounts = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/portfolio\/subaccounts2\/{page}.GET.responses.200.content.application\/json.schema.properties.metadata@ in the specification.
-- 
-- 
data Get_portfolio_subaccounts2__page_ResponseBody200Metadata = Get_portfolio_subaccounts2__page_ResponseBody200Metadata {
  -- | pageNume: Current page number.
  get_portfolio_subaccounts2__page_ResponseBody200MetadataPageNume :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | pageSize: How many sub-accounts are returned for the page requested. A max of 20 per page.
  , get_portfolio_subaccounts2__page_ResponseBody200MetadataPageSize :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | total: Number of sub-accounts
  , get_portfolio_subaccounts2__page_ResponseBody200MetadataTotal :: (GHC.Maybe.Maybe GHC.Types.Double)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Get_portfolio_subaccounts2__page_ResponseBody200Metadata
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pageNume" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200MetadataPageNume obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pageSize" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200MetadataPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200MetadataTotal obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pageNume" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200MetadataPageNume obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("pageSize" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200MetadataPageSize obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("total" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200MetadataTotal obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Get_portfolio_subaccounts2__page_ResponseBody200Metadata
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Get_portfolio_subaccounts2__page_ResponseBody200Metadata" (\obj -> ((GHC.Base.pure Get_portfolio_subaccounts2__page_ResponseBody200Metadata GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pageNume")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "pageSize")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "total"))
-- | Create a new 'Get_portfolio_subaccounts2__page_ResponseBody200Metadata' with all required fields.
mkGet_portfolio_subaccounts2__page_ResponseBody200Metadata :: Get_portfolio_subaccounts2__page_ResponseBody200Metadata
mkGet_portfolio_subaccounts2__page_ResponseBody200Metadata = Get_portfolio_subaccounts2__page_ResponseBody200Metadata{get_portfolio_subaccounts2__page_ResponseBody200MetadataPageNume = GHC.Maybe.Nothing,
                                                                                                                      get_portfolio_subaccounts2__page_ResponseBody200MetadataPageSize = GHC.Maybe.Nothing,
                                                                                                                      get_portfolio_subaccounts2__page_ResponseBody200MetadataTotal = GHC.Maybe.Nothing}
-- | Defines the object schema located at @paths.\/portfolio\/subaccounts2\/{page}.GET.responses.200.content.application\/json.schema.properties.subaccounts.items@ in the specification.
-- 
-- Account information
data Get_portfolio_subaccounts2__page_ResponseBody200Subaccounts = Get_portfolio_subaccounts2__page_ResponseBody200Subaccounts {
  -- | accountAlias: User customizable account alias. Refer to [Configure Account Alias](https:\/\/guides.interactivebrokers.com\/cp\/cp.htm\#am\/settings\/accountalias.htm) for details.
  get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountAlias :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | accountId: The account number
  , get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | accountStatus: When the account was opened in unix time.
  , get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountStatus :: (GHC.Maybe.Maybe GHC.Types.Double)
  -- | accountTitle: Title of the account
  , get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountTitle :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | accountVan: The accountAlias
  , get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountVan :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | clearingStatus: Status of the Account
  --   * O = Open
  --   * P or N = Pending
  --   * A = Abandoned
  --   * R = Rejected
  --   * C = Closed
  --   covestor:
  --     type: boolean
  --     description: Is a Covestor Account
  --   parent:
  --     type: object
  --     properties:
  --       mmc:
  --         type: array
  --         items:
  --           type: string
  --           description: Money Manager Client (MMC) Account
  --       accountId:
  --         type: string
  --         description: Account Number for Money Manager Client
  --       isMParent:
  --         type: boolean
  --         description: Is MM a Parent Account
  --       isMChild:
  --         type: boolean
  --         description: Is MM a Child Account
  --       isMultiplex:
  --         type: boolean
  --         description: Is a Multiplex Account. These are account models with individual account being parent and managed account being child.
  --   desc:
  --     type: string
  --     description: Formatted \"accountId - accountAlias\"
  , get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatus :: (GHC.Maybe.Maybe Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatus)
  -- | currency: Base currency of the account.
  , get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrency :: (GHC.Maybe.Maybe Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrency)
  -- | displayName: Whichever value is not null in this priority
  , get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayName :: (GHC.Maybe.Maybe Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayName)
  -- | faclient: If an account is a sub-account to a Financial Advisor.
  , get_portfolio_subaccounts2__page_ResponseBody200SubaccountsFaclient :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | id: The account identification value
  , get_portfolio_subaccounts2__page_ResponseBody200SubaccountsId :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | tradingType: UNI - Deprecated property
  , get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTradingType :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | type: Account Type
  , get_portfolio_subaccounts2__page_ResponseBody200SubaccountsType :: (GHC.Maybe.Maybe Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsType)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Get_portfolio_subaccounts2__page_ResponseBody200Subaccounts
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accountAlias" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountAlias obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accountId" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accountStatus" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accountTitle" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountTitle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accountVan" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountVan obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("clearingStatus" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("displayName" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("faclient" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsFaclient obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tradingType" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTradingType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsType obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accountAlias" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountAlias obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accountId" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accountStatus" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accountTitle" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountTitle obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("accountVan" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountVan obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("clearingStatus" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatus obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("currency" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("displayName" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayName obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("faclient" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsFaclient obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("id" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsId obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tradingType" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTradingType obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("type" Data.Aeson.Types.ToJSON..=)) (get_portfolio_subaccounts2__page_ResponseBody200SubaccountsType obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Get_portfolio_subaccounts2__page_ResponseBody200Subaccounts
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Get_portfolio_subaccounts2__page_ResponseBody200Subaccounts" (\obj -> (((((((((((GHC.Base.pure Get_portfolio_subaccounts2__page_ResponseBody200Subaccounts GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "accountAlias")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "accountId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "accountStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "accountTitle")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "accountVan")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "clearingStatus")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "displayName")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "faclient")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tradingType")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "type"))
-- | Create a new 'Get_portfolio_subaccounts2__page_ResponseBody200Subaccounts' with all required fields.
mkGet_portfolio_subaccounts2__page_ResponseBody200Subaccounts :: Get_portfolio_subaccounts2__page_ResponseBody200Subaccounts
mkGet_portfolio_subaccounts2__page_ResponseBody200Subaccounts = Get_portfolio_subaccounts2__page_ResponseBody200Subaccounts{get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountAlias = GHC.Maybe.Nothing,
                                                                                                                            get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountId = GHC.Maybe.Nothing,
                                                                                                                            get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountStatus = GHC.Maybe.Nothing,
                                                                                                                            get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountTitle = GHC.Maybe.Nothing,
                                                                                                                            get_portfolio_subaccounts2__page_ResponseBody200SubaccountsAccountVan = GHC.Maybe.Nothing,
                                                                                                                            get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatus = GHC.Maybe.Nothing,
                                                                                                                            get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrency = GHC.Maybe.Nothing,
                                                                                                                            get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayName = GHC.Maybe.Nothing,
                                                                                                                            get_portfolio_subaccounts2__page_ResponseBody200SubaccountsFaclient = GHC.Maybe.Nothing,
                                                                                                                            get_portfolio_subaccounts2__page_ResponseBody200SubaccountsId = GHC.Maybe.Nothing,
                                                                                                                            get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTradingType = GHC.Maybe.Nothing,
                                                                                                                            get_portfolio_subaccounts2__page_ResponseBody200SubaccountsType = GHC.Maybe.Nothing}
-- | Defines the enum schema located at @paths.\/portfolio\/subaccounts2\/{page}.GET.responses.200.content.application\/json.schema.properties.subaccounts.items.properties.clearingStatus@ in the specification.
-- 
-- Status of the Account
--   * O = Open
--   * P or N = Pending
--   * A = Abandoned
--   * R = Rejected
--   * C = Closed
--   covestor:
--     type: boolean
--     description: Is a Covestor Account
--   parent:
--     type: object
--     properties:
--       mmc:
--         type: array
--         items:
--           type: string
--           description: Money Manager Client (MMC) Account
--       accountId:
--         type: string
--         description: Account Number for Money Manager Client
--       isMParent:
--         type: boolean
--         description: Is MM a Parent Account
--       isMChild:
--         type: boolean
--         description: Is MM a Child Account
--       isMultiplex:
--         type: boolean
--         description: Is a Multiplex Account. These are account models with individual account being parent and managed account being child.
--   desc:
--     type: string
--     description: Formatted \"accountId - accountAlias\"
data Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatus =
   Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumO -- ^ Represents the JSON value @"O"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumP -- ^ Represents the JSON value @"P"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumFalse -- ^ Represents the JSON value @false@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumA -- ^ Represents the JSON value @"A"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumR -- ^ Represents the JSON value @"R"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumC -- ^ Represents the JSON value @"C"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatus
    where toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusOther val) = val
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumO) = "O"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumP) = "P"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumFalse) = Data.Aeson.Types.Internal.Bool GHC.Types.False
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumA) = "A"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumR) = "R"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumC) = "C"
instance Data.Aeson.Types.FromJSON.FromJSON Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatus
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "O" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumO
                                            | val GHC.Classes.== "P" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumP
                                            | val GHC.Classes.== Data.Aeson.Types.Internal.Bool GHC.Types.False -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumFalse
                                            | val GHC.Classes.== "A" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumA
                                            | val GHC.Classes.== "R" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumR
                                            | val GHC.Classes.== "C" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusEnumC
                                            | GHC.Base.otherwise -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsClearingStatusOther val)
-- | Defines the enum schema located at @paths.\/portfolio\/subaccounts2\/{page}.GET.responses.200.content.application\/json.schema.properties.subaccounts.items.properties.currency@ in the specification.
-- 
-- Base currency of the account.
data Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrency =
   Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumAUD -- ^ Represents the JSON value @"AUD"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumGBP -- ^ Represents the JSON value @"GBP"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCAD -- ^ Represents the JSON value @"CAD"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCNH -- ^ Represents the JSON value @"CNH"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCZK -- ^ Represents the JSON value @"CZK"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumDKK -- ^ Represents the JSON value @"DKK"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumEUR -- ^ Represents the JSON value @"EUR"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumHKD -- ^ Represents the JSON value @"HKD"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumHUF -- ^ Represents the JSON value @"HUF"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumINR -- ^ Represents the JSON value @"INR"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumILS -- ^ Represents the JSON value @"ILS"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumJPY -- ^ Represents the JSON value @"JPY"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumMXN -- ^ Represents the JSON value @"MXN"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumNOK -- ^ Represents the JSON value @"NOK"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumNZD -- ^ Represents the JSON value @"NZD"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumPLN -- ^ Represents the JSON value @"PLN"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumRUB -- ^ Represents the JSON value @"RUB"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumSGD -- ^ Represents the JSON value @"SGD"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumSEK -- ^ Represents the JSON value @"SEK"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCHF -- ^ Represents the JSON value @"CHF"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumUSD -- ^ Represents the JSON value @"USD"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrency
    where toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyOther val) = val
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumAUD) = "AUD"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumGBP) = "GBP"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCAD) = "CAD"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCNH) = "CNH"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCZK) = "CZK"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumDKK) = "DKK"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumEUR) = "EUR"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumHKD) = "HKD"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumHUF) = "HUF"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumINR) = "INR"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumILS) = "ILS"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumJPY) = "JPY"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumMXN) = "MXN"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumNOK) = "NOK"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumNZD) = "NZD"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumPLN) = "PLN"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumRUB) = "RUB"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumSGD) = "SGD"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumSEK) = "SEK"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCHF) = "CHF"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumUSD) = "USD"
instance Data.Aeson.Types.FromJSON.FromJSON Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrency
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "AUD" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumAUD
                                            | val GHC.Classes.== "GBP" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumGBP
                                            | val GHC.Classes.== "CAD" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCAD
                                            | val GHC.Classes.== "CNH" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCNH
                                            | val GHC.Classes.== "CZK" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCZK
                                            | val GHC.Classes.== "DKK" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumDKK
                                            | val GHC.Classes.== "EUR" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumEUR
                                            | val GHC.Classes.== "HKD" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumHKD
                                            | val GHC.Classes.== "HUF" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumHUF
                                            | val GHC.Classes.== "INR" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumINR
                                            | val GHC.Classes.== "ILS" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumILS
                                            | val GHC.Classes.== "JPY" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumJPY
                                            | val GHC.Classes.== "MXN" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumMXN
                                            | val GHC.Classes.== "NOK" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumNOK
                                            | val GHC.Classes.== "NZD" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumNZD
                                            | val GHC.Classes.== "PLN" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumPLN
                                            | val GHC.Classes.== "RUB" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumRUB
                                            | val GHC.Classes.== "SGD" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumSGD
                                            | val GHC.Classes.== "SEK" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumSEK
                                            | val GHC.Classes.== "CHF" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumCHF
                                            | val GHC.Classes.== "USD" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyEnumUSD
                                            | GHC.Base.otherwise -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsCurrencyOther val)
-- | Defines the enum schema located at @paths.\/portfolio\/subaccounts2\/{page}.GET.responses.200.content.application\/json.schema.properties.subaccounts.items.properties.displayName@ in the specification.
-- 
-- Whichever value is not null in this priority
data Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayName =
   Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameEnumAccountTitle -- ^ Represents the JSON value @"accountTitle"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameEnumAccountVan -- ^ Represents the JSON value @"accountVan"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameEnumAccountId -- ^ Represents the JSON value @"accountId"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayName
    where toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameOther val) = val
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameEnumAccountTitle) = "accountTitle"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameEnumAccountVan) = "accountVan"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameEnumAccountId) = "accountId"
instance Data.Aeson.Types.FromJSON.FromJSON Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayName
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "accountTitle" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameEnumAccountTitle
                                            | val GHC.Classes.== "accountVan" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameEnumAccountVan
                                            | val GHC.Classes.== "accountId" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameEnumAccountId
                                            | GHC.Base.otherwise -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsDisplayNameOther val)
-- | Defines the enum schema located at @paths.\/portfolio\/subaccounts2\/{page}.GET.responses.200.content.application\/json.schema.properties.subaccounts.items.properties.type@ in the specification.
-- 
-- Account Type
data Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsType =
   Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeOther Data.Aeson.Types.Internal.Value -- ^ This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeTyped Data.Text.Internal.Text -- ^ This constructor can be used to send values to the server which are not present in the specification yet.
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumINDIVIDUAL -- ^ Represents the JSON value @"INDIVIDUAL"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumJOINT -- ^ Represents the JSON value @"JOINT"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumORG -- ^ Represents the JSON value @"ORG"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumTRUST -- ^ Represents the JSON value @"TRUST"@
  | Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumDEMO -- ^ Represents the JSON value @"DEMO"@
  deriving (GHC.Show.Show, GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsType
    where toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeOther val) = val
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeTyped val) = Data.Aeson.Types.ToJSON.toJSON val
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumINDIVIDUAL) = "INDIVIDUAL"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumJOINT) = "JOINT"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumORG) = "ORG"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumTRUST) = "TRUST"
          toJSON (Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumDEMO) = "DEMO"
instance Data.Aeson.Types.FromJSON.FromJSON Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsType
    where parseJSON val = GHC.Base.pure (if | val GHC.Classes.== "INDIVIDUAL" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumINDIVIDUAL
                                            | val GHC.Classes.== "JOINT" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumJOINT
                                            | val GHC.Classes.== "ORG" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumORG
                                            | val GHC.Classes.== "TRUST" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumTRUST
                                            | val GHC.Classes.== "DEMO" -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeEnumDEMO
                                            | GHC.Base.otherwise -> Get_portfolio_subaccounts2__page_ResponseBody200SubaccountsTypeOther val)
-- | > GET /portfolio/subaccounts2/{page}
-- 
-- The same as 'get_portfolio_subaccounts2__page_' but accepts an explicit configuration.
get_portfolio_subaccounts2__page_WithConfiguration :: forall m . IBKR.Common.MonadHTTP m => IBKR.Common.Configuration -- ^ The configuration to use in the request
  -> Data.Text.Internal.Text -- ^ page
  -> m (Network.HTTP.Client.Types.Response Get_portfolio_subaccounts2__page_Response) -- ^ Monadic computation which returns the result of the operation
get_portfolio_subaccounts2__page_WithConfiguration config
                                                   page = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either Get_portfolio_subaccounts2__page_ResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Get_portfolio_subaccounts2__page_Response200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                       Get_portfolio_subaccounts2__page_ResponseBody200)
                                                                                                                                                                                                                      | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (IBKR.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/portfolio/subaccounts2/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel page)) GHC.Base.++ ""))) GHC.Base.mempty)
-- | > GET /portfolio/subaccounts2/{page}
-- 
-- The same as 'get_portfolio_subaccounts2__page_' but returns the raw 'Data.ByteString.Char8.ByteString'.
get_portfolio_subaccounts2__page_Raw :: forall m . IBKR.Common.MonadHTTP m => Data.Text.Internal.Text -- ^ page
  -> IBKR.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
get_portfolio_subaccounts2__page_Raw page = GHC.Base.id (IBKR.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/portfolio/subaccounts2/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel page)) GHC.Base.++ ""))) GHC.Base.mempty)
-- | > GET /portfolio/subaccounts2/{page}
-- 
-- The same as 'get_portfolio_subaccounts2__page_' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
get_portfolio_subaccounts2__page_WithConfigurationRaw :: forall m . IBKR.Common.MonadHTTP m => IBKR.Common.Configuration -- ^ The configuration to use in the request
  -> Data.Text.Internal.Text -- ^ page
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
get_portfolio_subaccounts2__page_WithConfigurationRaw config
                                                      page = GHC.Base.id (IBKR.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/portfolio/subaccounts2/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel page)) GHC.Base.++ ""))) GHC.Base.mempty)

-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE ExplicitForAll #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the different functions to run the operation get_portfolio__accountId__positions__pageId_
module IBKR.Operations.Get_portfolio__accountId__positions__pageId_ where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Control.Monad.Trans.Reader
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Either
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified Data.Vector
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified Network.HTTP.Client
import qualified Network.HTTP.Client as Network.HTTP.Client.Request
import qualified Network.HTTP.Client as Network.HTTP.Client.Types
import qualified Network.HTTP.Simple
import qualified Network.HTTP.Types
import qualified Network.HTTP.Types as Network.HTTP.Types.Status
import qualified Network.HTTP.Types as Network.HTTP.Types.URI
import qualified IBKR.Common
import IBKR.Types

-- | > GET /portfolio/{accountId}/positions/{pageId}
-- 
-- Returns a list of positions for the given account. The endpoint supports paging, page\'s default size is 30 positions. \/portfolio\/accounts or \/portfolio\/subaccounts must be called prior to this endpoint.
get_portfolio__accountId__positions__pageId_ :: forall m . IBKR.Common.MonadHTTP m => Get_portfolio__accountId__positions__pageId_Parameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> IBKR.Common.ClientT m (Network.HTTP.Client.Types.Response Get_portfolio__accountId__positions__pageId_Response) -- ^ Monadic computation which returns the result of the operation
get_portfolio__accountId__positions__pageId_ parameters = GHC.Base.fmap (\response_0 -> GHC.Base.fmap (Data.Either.either Get_portfolio__accountId__positions__pageId_ResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_1 -> Network.HTTP.Types.Status.statusCode status_1 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Get_portfolio__accountId__positions__pageId_Response200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                             Position)
                                                                                                                                                                                                                                 | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_0) response_0) (IBKR.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/portfolio/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel (get_portfolio__accountId__positions__pageId_ParametersPathAccountId parameters))) GHC.Base.++ ("/positions/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel (get_portfolio__accountId__positions__pageId_ParametersPathPageId parameters))) GHC.Base.++ ""))))) [IBKR.Common.QueryParameter (Data.Text.pack "model") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryModel parameters) (Data.Text.pack "form") GHC.Types.False,
ommon.QueryParameter (Data.Text.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQuerySort parameters) (Data.Text.pack "form") GHC.Types.False,
ommon.QueryParameter (Data.Text.pack "direction") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryDirection parameters) (Data.Text.pack "form") GHC.Types.False,
ommon.QueryParameter (Data.Text.pack "period") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryPeriod parameters) (Data.Text.pack "form") GHC.Types.False])
-- | Defines the object schema located at @paths.\/portfolio\/{accountId}\/positions\/{pageId}.GET.parameters@ in the specification.
-- 
-- 
data Get_portfolio__accountId__positions__pageId_Parameters = Get_portfolio__accountId__positions__pageId_Parameters {
  -- | pathAccountId: Represents the parameter named \'accountId\'
  -- 
  -- account id
  get_portfolio__accountId__positions__pageId_ParametersPathAccountId :: Data.Text.Internal.Text
  -- | pathPageId: Represents the parameter named \'pageId\'
  -- 
  -- page id
  , get_portfolio__accountId__positions__pageId_ParametersPathPageId :: Data.Text.Internal.Text
  -- | queryDirection: Represents the parameter named \'direction\'
  -- 
  -- in which order, a means ascending - d means descending
  , get_portfolio__accountId__positions__pageId_ParametersQueryDirection :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryModel: Represents the parameter named \'model\'
  -- 
  -- optional
  , get_portfolio__accountId__positions__pageId_ParametersQueryModel :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | queryPeriod: Represents the parameter named \'period\'
  -- 
  -- period for pnl column, can be 1D, 7D, 1M...
  , get_portfolio__accountId__positions__pageId_ParametersQueryPeriod :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | querySort: Represents the parameter named \'sort\'
  -- 
  -- declare the table to be sorted by which column
  , get_portfolio__accountId__positions__pageId_ParametersQuerySort :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Get_portfolio__accountId__positions__pageId_Parameters
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (["pathAccountId" Data.Aeson.Types.ToJSON..= get_portfolio__accountId__positions__pageId_ParametersPathAccountId obj] : ["pathPageId" Data.Aeson.Types.ToJSON..= get_portfolio__accountId__positions__pageId_ParametersPathPageId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDirection" Data.Aeson.Types.ToJSON..=)) (get_portfolio__accountId__positions__pageId_ParametersQueryDirection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryModel" Data.Aeson.Types.ToJSON..=)) (get_portfolio__accountId__positions__pageId_ParametersQueryModel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPeriod" Data.Aeson.Types.ToJSON..=)) (get_portfolio__accountId__positions__pageId_ParametersQueryPeriod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySort" Data.Aeson.Types.ToJSON..=)) (get_portfolio__accountId__positions__pageId_ParametersQuerySort obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (["pathAccountId" Data.Aeson.Types.ToJSON..= get_portfolio__accountId__positions__pageId_ParametersPathAccountId obj] : ["pathPageId" Data.Aeson.Types.ToJSON..= get_portfolio__accountId__positions__pageId_ParametersPathPageId obj] : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryDirection" Data.Aeson.Types.ToJSON..=)) (get_portfolio__accountId__positions__pageId_ParametersQueryDirection obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryModel" Data.Aeson.Types.ToJSON..=)) (get_portfolio__accountId__positions__pageId_ParametersQueryModel obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("queryPeriod" Data.Aeson.Types.ToJSON..=)) (get_portfolio__accountId__positions__pageId_ParametersQueryPeriod obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("querySort" Data.Aeson.Types.ToJSON..=)) (get_portfolio__accountId__positions__pageId_ParametersQuerySort obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Get_portfolio__accountId__positions__pageId_Parameters
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Get_portfolio__accountId__positions__pageId_Parameters" (\obj -> (((((GHC.Base.pure Get_portfolio__accountId__positions__pageId_Parameters GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathAccountId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..: "pathPageId")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryDirection")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryModel")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "queryPeriod")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "querySort"))
-- | Create a new 'Get_portfolio__accountId__positions__pageId_Parameters' with all required fields.
mkGet_portfolio__accountId__positions__pageId_Parameters :: Data.Text.Internal.Text -- ^ 'get_portfolio__accountId__positions__pageId_ParametersPathAccountId'
  -> Data.Text.Internal.Text -- ^ 'get_portfolio__accountId__positions__pageId_ParametersPathPageId'
  -> Get_portfolio__accountId__positions__pageId_Parameters
mkGet_portfolio__accountId__positions__pageId_Parameters get_portfolio__accountId__positions__pageId_ParametersPathAccountId get_portfolio__accountId__positions__pageId_ParametersPathPageId = Get_portfolio__accountId__positions__pageId_Parameters{get_portfolio__accountId__positions__pageId_ParametersPathAccountId = get_portfolio__accountId__positions__pageId_ParametersPathAccountId,
                                                                                                                                                                                                                                                       get_portfolio__accountId__positions__pageId_ParametersPathPageId = get_portfolio__accountId__positions__pageId_ParametersPathPageId,
                                                                                                                                                                                                                                                       get_portfolio__accountId__positions__pageId_ParametersQueryDirection = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                       get_portfolio__accountId__positions__pageId_ParametersQueryModel = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                       get_portfolio__accountId__positions__pageId_ParametersQueryPeriod = GHC.Maybe.Nothing,
                                                                                                                                                                                                                                                       get_portfolio__accountId__positions__pageId_ParametersQuerySort = GHC.Maybe.Nothing}
-- | Represents a response of the operation 'get_portfolio__accountId__positions__pageId_'.
-- 
-- The response constructor is chosen by the status code of the response. If no case matches (no specific case for the response code, no range case, no default case), 'Get_portfolio__accountId__positions__pageId_ResponseError' is used.
data Get_portfolio__accountId__positions__pageId_Response =
   Get_portfolio__accountId__positions__pageId_ResponseError GHC.Base.String -- ^ Means either no matching case available or a parse error
  | Get_portfolio__accountId__positions__pageId_Response200 Position -- ^ returns a list of positions in the portfolio
  deriving (GHC.Show.Show, GHC.Classes.Eq)
-- | > GET /portfolio/{accountId}/positions/{pageId}
-- 
-- The same as 'get_portfolio__accountId__positions__pageId_' but accepts an explicit configuration.
get_portfolio__accountId__positions__pageId_WithConfiguration :: forall m . IBKR.Common.MonadHTTP m => IBKR.Common.Configuration -- ^ The configuration to use in the request
  -> Get_portfolio__accountId__positions__pageId_Parameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Get_portfolio__accountId__positions__pageId_Response) -- ^ Monadic computation which returns the result of the operation
get_portfolio__accountId__positions__pageId_WithConfiguration config
                                                              parameters = GHC.Base.fmap (\response_2 -> GHC.Base.fmap (Data.Either.either Get_portfolio__accountId__positions__pageId_ResponseError GHC.Base.id GHC.Base.. (\response body -> if | (\status_3 -> Network.HTTP.Types.Status.statusCode status_3 GHC.Classes.== 200) (Network.HTTP.Client.Types.responseStatus response) -> Get_portfolio__accountId__positions__pageId_Response200 Data.Functor.<$> (Data.Aeson.eitherDecodeStrict body :: Data.Either.Either GHC.Base.String
osition)
                                                                                                                                                                                                                                                  | GHC.Base.otherwise -> Data.Either.Left "Missing default response type") response_2) response_2) (IBKR.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/portfolio/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel (get_portfolio__accountId__positions__pageId_ParametersPathAccountId parameters))) GHC.Base.++ ("/positions/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel (get_portfolio__accountId__positions__pageId_ParametersPathPageId parameters))) GHC.Base.++ ""))))) [IBKR.Common.QueryParameter (Data.Text.pack "model") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryModel parameters) (Data.Text.pack "form") GHC.Types.False,
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               IBKR.Common.QueryParameter (Data.Text.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQuerySort parameters) (Data.Text.pack "form") GHC.Types.False,
ommon.QueryParameter (Data.Text.pack "direction") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryDirection parameters) (Data.Text.pack "form") GHC.Types.False,
ommon.QueryParameter (Data.Text.pack "period") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryPeriod parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > GET /portfolio/{accountId}/positions/{pageId}
-- 
-- The same as 'get_portfolio__accountId__positions__pageId_' but returns the raw 'Data.ByteString.Char8.ByteString'.
get_portfolio__accountId__positions__pageId_Raw :: forall m . IBKR.Common.MonadHTTP m => Get_portfolio__accountId__positions__pageId_Parameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> IBKR.Common.ClientT m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
get_portfolio__accountId__positions__pageId_Raw parameters = GHC.Base.id (IBKR.Common.doCallWithConfigurationM (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/portfolio/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel (get_portfolio__accountId__positions__pageId_ParametersPathAccountId parameters))) GHC.Base.++ ("/positions/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel (get_portfolio__accountId__positions__pageId_ParametersPathPageId parameters))) GHC.Base.++ ""))))) [IBKR.Common.QueryParameter (Data.Text.pack "model") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryModel parameters) (Data.Text.pack "form") GHC.Types.False,
ommon.QueryParameter (Data.Text.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQuerySort parameters) (Data.Text.pack "form") GHC.Types.False,
ommon.QueryParameter (Data.Text.pack "direction") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryDirection parameters) (Data.Text.pack "form") GHC.Types.False,
ommon.QueryParameter (Data.Text.pack "period") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryPeriod parameters) (Data.Text.pack "form") GHC.Types.False])
-- | > GET /portfolio/{accountId}/positions/{pageId}
-- 
-- The same as 'get_portfolio__accountId__positions__pageId_' but accepts an explicit configuration and returns the raw 'Data.ByteString.Char8.ByteString'.
get_portfolio__accountId__positions__pageId_WithConfigurationRaw :: forall m . IBKR.Common.MonadHTTP m => IBKR.Common.Configuration -- ^ The configuration to use in the request
  -> Get_portfolio__accountId__positions__pageId_Parameters -- ^ Contains all available parameters of this operation (query and path parameters)
  -> m (Network.HTTP.Client.Types.Response Data.ByteString.Internal.ByteString) -- ^ Monadic computation which returns the result of the operation
get_portfolio__accountId__positions__pageId_WithConfigurationRaw config
                                                                 parameters = GHC.Base.id (IBKR.Common.doCallWithConfiguration config (Data.Text.toUpper GHC.Base.$ Data.Text.pack "GET") (Data.Text.pack ("/portfolio/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel (get_portfolio__accountId__positions__pageId_ParametersPathAccountId parameters))) GHC.Base.++ ("/positions/" GHC.Base.++ (Data.ByteString.Char8.unpack (Network.HTTP.Types.URI.urlEncode GHC.Types.True GHC.Base.$ (Data.ByteString.Char8.pack GHC.Base.$ IBKR.Common.stringifyModel (get_portfolio__accountId__positions__pageId_ParametersPathPageId parameters))) GHC.Base.++ ""))))) [IBKR.Common.QueryParameter (Data.Text.pack "model") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryModel parameters) (Data.Text.pack "form") GHC.Types.False,
ommon.QueryParameter (Data.Text.pack "sort") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQuerySort parameters) (Data.Text.pack "form") GHC.Types.False,
ommon.QueryParameter (Data.Text.pack "direction") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryDirection parameters) (Data.Text.pack "form") GHC.Types.False,
ommon.QueryParameter (Data.Text.pack "period") (Data.Aeson.Types.ToJSON.toJSON Data.Functor.<$> get_portfolio__accountId__positions__pageId_ParametersQueryPeriod parameters) (Data.Text.pack "form") GHC.Types.False])

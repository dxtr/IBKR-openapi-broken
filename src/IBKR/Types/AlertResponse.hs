-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.

{-# LANGUAGE OverloadedStrings #-}
{-# LANGUAGE MultiWayIf #-}

-- | Contains the types generated from the schema AlertResponse
module IBKR.Types.AlertResponse where

import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe
import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Foldable
import qualified Data.Functor
import qualified Data.Maybe
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified IBKR.Common
import IBKR.TypeAlias

-- | Defines the object schema located at @components.schemas.alert-response@ in the specification.
-- 
-- 
data Alert_response = Alert_response {
  -- | account: account id
  alert_responseAccount :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | alert_active: whether alert is active or not, so value can only be 0 or 1
  , alert_responseAlert_active :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | alert_default_type: MTA alert only
  , alert_responseAlert_default_type :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | alert_email: email address to receive alert
  , alert_responseAlert_email :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | alert_message: The message you want to receive via email or text message
  , alert_responseAlert_message :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | alert_mta_currency: MTA alert only
  , alert_responseAlert_mta_currency :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | alert_mta_defaults: MTA alert only
  , alert_responseAlert_mta_defaults :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | alert_name: name of alert
  , alert_responseAlert_name :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | alert_play_audio: audio message to play when alert is triggered
  , alert_responseAlert_play_audio :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | alert_repeatable: whether alert is repeatable or not, so value can only be 0 or 1
  , alert_responseAlert_repeatable :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | alert_send_message: whether allowing to send email or not, so value can only be 0 or 1,
  , alert_responseAlert_send_message :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | alert_show_popup: value can only be 0 or 1, set to 1 to allow to show alert in pop-ups
  , alert_responseAlert_show_popup :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | alert_triggered: whether the alert has been triggered
  , alert_responseAlert_triggered :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | condition_outside_rth: whether allowing the condition can be triggered outside of regular trading hours, 1 means allow
  , alert_responseCondition_outside_rth :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | condition_size: size of conditions array
  , alert_responseCondition_size :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | conditions
  , alert_responseConditions :: (GHC.Maybe.Maybe ([Alert_responseConditions]))
  -- | expire_time: format, YYYYMMDD-HH:mm:ss
  , alert_responseExpire_time :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | itws_orders_only: value can only be 0 or 1, set to 1 to enable the alert only in IBKR mobile
  , alert_responseItws_orders_only :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | order_id
  , alert_responseOrder_id :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | order_not_editable: whether the alert can be edited
  , alert_responseOrder_not_editable :: (GHC.Maybe.Maybe GHC.Types.Bool)
  -- | order_status: status of alert
  , alert_responseOrder_status :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | outsideRth: value can only be 0 or 1, set to 1 if the alert can be triggered outside regular trading hours.
  , alert_responseOutsideRth :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | tif: time in force, can only be GTC or GTD
  , alert_responseTif :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | time_zone: MTA alert only
  , alert_responseTime_zone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | tool_id: for MTA alert only, each user has a unique toolId and it will stay the same, do not send for normal alert
  , alert_responseTool_id :: (GHC.Maybe.Maybe GHC.Types.Int)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Alert_response
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (alert_responseAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_active" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_active obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_default_type" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_default_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_email" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_message" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_message obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_mta_currency" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_mta_currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_mta_defaults" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_mta_defaults obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_name" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_play_audio" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_play_audio obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_repeatable" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_repeatable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_send_message" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_send_message obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_show_popup" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_show_popup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_triggered" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_triggered obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_outside_rth" Data.Aeson.Types.ToJSON..=)) (alert_responseCondition_outside_rth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_size" Data.Aeson.Types.ToJSON..=)) (alert_responseCondition_size obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("conditions" Data.Aeson.Types.ToJSON..=)) (alert_responseConditions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expire_time" Data.Aeson.Types.ToJSON..=)) (alert_responseExpire_time obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("itws_orders_only" Data.Aeson.Types.ToJSON..=)) (alert_responseItws_orders_only obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("order_id" Data.Aeson.Types.ToJSON..=)) (alert_responseOrder_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("order_not_editable" Data.Aeson.Types.ToJSON..=)) (alert_responseOrder_not_editable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("order_status" Data.Aeson.Types.ToJSON..=)) (alert_responseOrder_status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outsideRth" Data.Aeson.Types.ToJSON..=)) (alert_responseOutsideRth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tif" Data.Aeson.Types.ToJSON..=)) (alert_responseTif obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("time_zone" Data.Aeson.Types.ToJSON..=)) (alert_responseTime_zone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tool_id" Data.Aeson.Types.ToJSON..=)) (alert_responseTool_id obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("account" Data.Aeson.Types.ToJSON..=)) (alert_responseAccount obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_active" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_active obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_default_type" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_default_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_email" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_email obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_message" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_message obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_mta_currency" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_mta_currency obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_mta_defaults" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_mta_defaults obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_name" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_name obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_play_audio" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_play_audio obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_repeatable" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_repeatable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_send_message" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_send_message obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_show_popup" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_show_popup obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("alert_triggered" Data.Aeson.Types.ToJSON..=)) (alert_responseAlert_triggered obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_outside_rth" Data.Aeson.Types.ToJSON..=)) (alert_responseCondition_outside_rth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_size" Data.Aeson.Types.ToJSON..=)) (alert_responseCondition_size obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("conditions" Data.Aeson.Types.ToJSON..=)) (alert_responseConditions obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("expire_time" Data.Aeson.Types.ToJSON..=)) (alert_responseExpire_time obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("itws_orders_only" Data.Aeson.Types.ToJSON..=)) (alert_responseItws_orders_only obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("order_id" Data.Aeson.Types.ToJSON..=)) (alert_responseOrder_id obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("order_not_editable" Data.Aeson.Types.ToJSON..=)) (alert_responseOrder_not_editable obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("order_status" Data.Aeson.Types.ToJSON..=)) (alert_responseOrder_status obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("outsideRth" Data.Aeson.Types.ToJSON..=)) (alert_responseOutsideRth obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tif" Data.Aeson.Types.ToJSON..=)) (alert_responseTif obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("time_zone" Data.Aeson.Types.ToJSON..=)) (alert_responseTime_zone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("tool_id" Data.Aeson.Types.ToJSON..=)) (alert_responseTool_id obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Alert_response
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Alert_response" (\obj -> ((((((((((((((((((((((((GHC.Base.pure Alert_response GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "account")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_active")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_default_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_email")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_mta_currency")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_mta_defaults")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_name")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_play_audio")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_repeatable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_send_message")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_show_popup")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "alert_triggered")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "condition_outside_rth")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "condition_size")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "conditions")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "expire_time")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "itws_orders_only")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "order_id")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "order_not_editable")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "order_status")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "outsideRth")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tif")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "time_zone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "tool_id"))
-- | Create a new 'Alert_response' with all required fields.
mkAlert_response :: Alert_response
mkAlert_response = Alert_response{alert_responseAccount = GHC.Maybe.Nothing,
                                  alert_responseAlert_active = GHC.Maybe.Nothing,
                                  alert_responseAlert_default_type = GHC.Maybe.Nothing,
                                  alert_responseAlert_email = GHC.Maybe.Nothing,
                                  alert_responseAlert_message = GHC.Maybe.Nothing,
                                  alert_responseAlert_mta_currency = GHC.Maybe.Nothing,
                                  alert_responseAlert_mta_defaults = GHC.Maybe.Nothing,
                                  alert_responseAlert_name = GHC.Maybe.Nothing,
                                  alert_responseAlert_play_audio = GHC.Maybe.Nothing,
                                  alert_responseAlert_repeatable = GHC.Maybe.Nothing,
                                  alert_responseAlert_send_message = GHC.Maybe.Nothing,
                                  alert_responseAlert_show_popup = GHC.Maybe.Nothing,
                                  alert_responseAlert_triggered = GHC.Maybe.Nothing,
                                  alert_responseCondition_outside_rth = GHC.Maybe.Nothing,
                                  alert_responseCondition_size = GHC.Maybe.Nothing,
                                  alert_responseConditions = GHC.Maybe.Nothing,
                                  alert_responseExpire_time = GHC.Maybe.Nothing,
                                  alert_responseItws_orders_only = GHC.Maybe.Nothing,
                                  alert_responseOrder_id = GHC.Maybe.Nothing,
                                  alert_responseOrder_not_editable = GHC.Maybe.Nothing,
                                  alert_responseOrder_status = GHC.Maybe.Nothing,
                                  alert_responseOutsideRth = GHC.Maybe.Nothing,
                                  alert_responseTif = GHC.Maybe.Nothing,
                                  alert_responseTime_zone = GHC.Maybe.Nothing,
                                  alert_responseTool_id = GHC.Maybe.Nothing}
-- | Defines the object schema located at @components.schemas.alert-response.properties.conditions.items@ in the specification.
-- 
-- 
data Alert_responseConditions = Alert_responseConditions {
  -- | condition_logic_bind: Condition array should end with \"n\"
  --   * a - AND
  --   * o - OR
  --   * n - END
  alert_responseConditionsCondition_logic_bind :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | condition_operator: optional, operator for the current condition
  --   * >= Greater than or equal to
  --   * \<= Less than or equal to
  , alert_responseConditionsCondition_operator :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | condition_time_zone: only needed for some MTA alert condition
  , alert_responseConditionsCondition_time_zone :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | condition_trigger_method: optional, only some type of conditions have triggerMethod
  , alert_responseConditionsCondition_trigger_method :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | condition_type: Types: 1-Price, 3-Time, 4-Margin, 5-Trade, 6-Volume, 7: MTA market 8: MTA Position, 9: MTA Acc. Daily PN&
  , alert_responseConditionsCondition_type :: (GHC.Maybe.Maybe GHC.Types.Int)
  -- | condition_value: can not be empty, can pass default value \"*\"
  , alert_responseConditionsCondition_value :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | conidex: conid and exchange. Format supports conid or conid\@exchange
  , alert_responseConditionsConidex :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  -- | contract_description_1: Format contract name
  , alert_responseConditionsContract_description_1 :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  } deriving (GHC.Show.Show
  , GHC.Classes.Eq)
instance Data.Aeson.Types.ToJSON.ToJSON Alert_responseConditions
    where toJSON obj = Data.Aeson.Types.Internal.object (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_logic_bind" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_logic_bind obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_operator" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_operator obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_time_zone" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_time_zone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_trigger_method" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_trigger_method obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_type" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_value" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_value obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("conidex" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsConidex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("contract_description_1" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsContract_description_1 obj) : GHC.Base.mempty))
          toEncoding obj = Data.Aeson.Encoding.Internal.pairs (GHC.Base.mconcat (Data.Foldable.concat (Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_logic_bind" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_logic_bind obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_operator" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_operator obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_time_zone" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_time_zone obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_trigger_method" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_trigger_method obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_type" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_type obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("condition_value" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsCondition_value obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("conidex" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsConidex obj) : Data.Maybe.maybe GHC.Base.mempty (GHC.Base.pure GHC.Base.. ("contract_description_1" Data.Aeson.Types.ToJSON..=)) (alert_responseConditionsContract_description_1 obj) : GHC.Base.mempty)))
instance Data.Aeson.Types.FromJSON.FromJSON Alert_responseConditions
    where parseJSON = Data.Aeson.Types.FromJSON.withObject "Alert_responseConditions" (\obj -> (((((((GHC.Base.pure Alert_responseConditions GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "condition_logic_bind")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "condition_operator")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "condition_time_zone")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "condition_trigger_method")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "condition_type")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "condition_value")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "conidex")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:! "contract_description_1"))
-- | Create a new 'Alert_responseConditions' with all required fields.
mkAlert_responseConditions :: Alert_responseConditions
mkAlert_responseConditions = Alert_responseConditions{alert_responseConditionsCondition_logic_bind = GHC.Maybe.Nothing,
                                                      alert_responseConditionsCondition_operator = GHC.Maybe.Nothing,
                                                      alert_responseConditionsCondition_time_zone = GHC.Maybe.Nothing,
                                                      alert_responseConditionsCondition_trigger_method = GHC.Maybe.Nothing,
                                                      alert_responseConditionsCondition_type = GHC.Maybe.Nothing,
                                                      alert_responseConditionsCondition_value = GHC.Maybe.Nothing,
                                                      alert_responseConditionsConidex = GHC.Maybe.Nothing,
                                                      alert_responseConditionsContract_description_1 = GHC.Maybe.Nothing}
